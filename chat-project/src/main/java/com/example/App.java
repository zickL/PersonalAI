/*
 * This source file was generated by the Gradle 'init' task
 */
package com.example;

import org.jooq.DSLContext;
import org.jooq.impl.DSL;

import javax.swing.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.util.List;

public class App {
    public static int RequestCount = 0;

    public static String MakeSomeComplexAdditionToTheMessage(String userMessage) {
        userMessage = userMessage + ". Please be concise. Short answer only.";
        return userMessage;
    }

    public static String AskOpenAIConcisely(List<String> previousMessages, String userMessage) {
        userMessage = MakeSomeComplexAdditionToTheMessage(userMessage);

        System.out.println();
        System.out.println("-------------------------");
        System.out.println("REQUEST #: " + RequestCount);
        System.out.println();
        System.out.println("PREVIOUS MESSAGES: ");
        for (var pm : previousMessages) {
            System.out.println(pm);
        }

        System.out.println();
        System.out.println("USER: " + userMessage);
        String response = CallOpenAIHelper(previousMessages, userMessage);

        System.out.println();
        System.out.println("SYSTEM: " + response);


        RequestCount++;

        return response;
    }

    public static String CallOpenAIHelper(List<String> previousMessages, String userMessage) {
        previousMessages.add(userMessage);
        var answer = OpenAI.CallOpenAI(previousMessages, userMessage);
        previousMessages.add(answer);
        return answer;
    }

    // Placeholder function for OpenAI
    public static String CallOpenAIStub(List<String> previousMessages, String userMessage) {
        previousMessages.add(userMessage);
        var answer =  "This is a fake response that's shorter from OpenAI";
        previousMessages.add(answer);
        return answer;
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            try {
                String url = "jdbc:postgresql://aws-0-us-west-1.pooler.supabase.com:6543/postgres";
                String username = "postgres.llvoxefofzazghdrhgwy";
                String password = "zickyLEE1996@";

                Connection connection = DriverManager.getConnection(url, username, password);
                // 创建 DSLContext（假设已经通过 JOOQ 配置了数据库连接）
                DSLContext dslContext = DSL.using(connection);

                // 传递 DSLContext 给 ChatService
                ChatService chatService = new ChatService(dslContext);

                // 初始化 ChatUI
                ChatUI chatUI = new ChatUI(chatService);
                chatUI.setVisible(true);
            } catch (Exception e) {
                e.printStackTrace();
            }
        });
    }
}
